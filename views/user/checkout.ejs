<%- include('../layout/userHead') -%>

<!-- Header Section Begin -->
<%- include('../layout/userHeaderNav') -%>
<!-- Header Section End -->

<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Check Out</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/shop">Shop</a>
                        <span>Check Out</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Checkout Section Begin -->
<section class="checkout spad">
    <div class="container">
        <div class="checkout__form">
            <form id="checkoutForm">
                <div class="row">
                    <div class="col-lg-8 col-md-6">
                        <div class="col-lg-4 col-md-3">
                        <h6 class="coupon__code"><span class="icon_tag_alt"></span> <a href="#" id="openAvailableCouponModal" style="color: red;">Available Coupons</a></h6>
                        </div>
                        <h6 class="coupon__code"><span class="icon_tag_alt"></span> Have a coupon? <a href="#" id="openCouponModal" style="color: #ff003c;">Click here</a> to enter your code</h6>
                        <h6 class="checkout__title">Billing Details</h6>
                        <!-- Address Selection -->
                        <div class="checkout__input">
                            <p>Select Address<span>*</span></p>
                            <select id="addressSelect" name="selectedAddress" onchange="toggleAddressForm()">
                                <option value="">Select an address</option>
                                <option value="new">Add new address</option>
                                <% if(addresses){ %>
                                <% addresses.forEach((address) => { %>
                                    <option value="<%= address._id %>"><%= address.name %>, <%= address.city %>, <%= address.state %> <%= address.pincode %></option>
                                <% }); %>
                                <% }; %>
                            </select>
                        </div>

                        <!-- Address Form (initially hidden) -->
                        <div id="addressForm" style="display: none;">
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="checkout__input">
                                        <p>Full Name<span>*</span></p>
                                        <input type="text" name="name" >
                                        <span id="name-error" class="error"></span>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="checkout__input">
                                        <p>Phone<span>*</span></p>
                                        <input type="text" name="phoneNumber" >
                                        <span id="number-error" class="error"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="checkout__input">
                                <p>Address<span>*</span></p>
                                <input type="text" name="address" placeholder="Street Address" class="checkout__input__add" >
                                <span id="address-error" class="error"></span>
                                <input type="text" name="locality" placeholder="Apartment, suite, unit etc. (optional)">
                                <!-- <span id="address-error" class="error"></span> -->
                            </div>
                            <div class="checkout__input">
                                <p>Town/City<span>*</span></p>
                                <input type="text" name="city" >
                                <span id="city-error" class="error"></span>
                            </div>
                            <div class="checkout__input">
                                <p>State<span>*</span></p>
                                <input type="text" name="state" >
                                <span id="state-error" class="error"></span>
                            </div>
                            <div class="checkout__input">
                                <p>Postcode / ZIP<span>*</span></p>
                                <input type="text" name="pincode" >
                                <span id="pincode-error" class="error"></span>
                            </div>
                            <div class="checkout__input">
                                <p>Address Type<span>*</span></p>
                                <select name="addressType" >
                                    <option value="home">HOME</option>
                                    <option value="work">WORK</option>
                                    <option value="other">OTHER</option>
                                </select>
                            </div>  
                        </div>

                        <div class="checkout__input__checkbox">
                            <label for="diff-acc">
                                <input type="checkbox" id="diff-acc">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6">
                        <div class="checkout__order">
                            <h4 class="order__title">Your orders</h4>
                            <div class="checkout__order__products">Products <span>Total</span></div>
                            <ul class="checkout__total__products">
                                <% cart.products.forEach((item, index) => { %>
                                    <li><%= index + 1 %>. <%= item.productid.productName %> <span>₹<%= (item.quantity * item.price).toFixed(2) %></span></li>
                                <% }); %>
                            </ul>
                            <ul class="checkout__total__all">
                                <li>Subtotal<span>₹<%= cart.subTotal.toFixed(2) %></span></li>
                                <% if(cart.discount > 0){ %>
                                <li>Discount<span>-₹<%= cart.discount.toFixed(2) %></span></li>
                                <% } %>
                                <% if(appliedCoupon) { %>
                                    <li>Coupon Discount <span>-₹<%= discountAmount.toFixed(2) %></span></li>
                                    <li>Total <span>₹<%= newTotal.toFixed(2) %></span></li>
                                <% } else { %>
                                    <li>Total <span>₹<%= cart.total.toFixed(2) %></span></li>
                                <% } %>
                            </ul>
                            <p><strong>Choose Payment Mode</strong></p>
                            <div class="checkout__input__checkbox">
                                <label for="payment-cod">
                                    COD
                                    <input type="radio" id="payment-cod" name="paymentMethod" value="COD" >
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                            <div class="checkout__input__checkbox">
                                <label for="payment-wallet">
                                    Wallet (bal : ₹<%= wallet.balance %>)
                                    <input type="radio" id="payment-wallet" name="paymentMethod" value="wallet" >
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                            <div class="checkout__input__checkbox">
                                <label for="payment-razorpay">
                                    Razorpay
                                    <input type="radio" id="payment-razorpay" name="paymentMethod" value="razorpay" >
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                            <button type="submit" class="site-btn">PLACE ORDER</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</section>
<!-- Checkout Section End -->

<!-- Coupon Modal -->
<div id="couponModal" class="modal" style="display: none;">
    <div class="modal-content">
        <div class="modal-header">
            <h2>APPLY COUPON</h2>
            <span class="close">&times;</span>
        </div>
        <div class="modal-body">
            <div class="coupon-input">
                <input type="text" id="couponCode" name="couponCode" placeholder="Enter coupon code">
                <button id="checkCoupon">CHECK</button>
            </div>
            <div id="couponDetails" style="display: none;">
                <div class="coupon-badge"></div>
                <h3></h3>
                <p class="description"></p>
                <p class="expiry"></p>
            </div>
        </div>
        <div class="modal-footer">
            <button id="applyCoupon" disabled>APPLY</button>
        </div>
    </div>
</div>

<!-- Available Coupons Modal -->
<div id="availableCouponsModal" class="modal" style="display: none;">
    <div class="modal-content">
        <div class="modal-header">
            <h2>AVAILABLE COUPONS</h2>
            <span class="close">&times;</span>
        </div>
        <div class="modal-body">
            <div id="availableCouponsList">
                <% coupons.forEach(coupon => { %>
                    <div class="coupon-item">
                        <div class="coupon-badge" data-coupon="<%= coupon.couponCode %>">
                            <%= coupon.couponCode %>
                            <span class="copy-icon"></span>
                        </div>
                        <h5>Save ₹<%= coupon.discountAmount %></h5>
                        <p class="description"><%= coupon.description %></p>
                        <p class="expiry">Expires on: <%= new Date(coupon.validTo).toLocaleDateString() %></p>
                    </div>
                <% }) %>
            </div>
        </div>
    </div>
</div>


<!-- Footer Section Begin -->
<%- include('../layout/userFooterNav') -%>
<!-- Footer Section End -->

<%- include('../layout/userFoot') -%>

<script>
    
    function toggleAddressForm() {
        const select = document.getElementById('addressSelect');
        const form = document.getElementById('addressForm');
        form.style.display = select.value === 'new' ? 'block' : 'none';
    }

    var couponsData = JSON.parse('<%- JSON.stringify(coupons) %>'.replace(/&#34;/g, '"'));

document.addEventListener('DOMContentLoaded', function() {
    const checkoutForm = document.getElementById('checkoutForm');
    const couponSection = document.querySelector('.coupon__code');
    const modal = document.getElementById("couponModal");
    const availableCouponsModal = document.getElementById("availableCouponsModal");
    const openCouponModalBtn = document.getElementById("openCouponModal");
    const openAvailableCouponsModalBtn = document.getElementById("openAvailableCouponModal");
    const closeBtns = document.getElementsByClassName("close");
    const checkCouponBtn = document.getElementById("checkCoupon");
    const couponCodeInput = document.getElementById("couponCode");
    const couponDetails = document.getElementById("couponDetails");
    const applyCouponBtn = document.getElementById("applyCoupon");

    // Modal functionality
    openCouponModalBtn.onclick = function(e) {
        e.preventDefault();
        modal.style.display = "flex";
    }

    openAvailableCouponsModalBtn.onclick = function(e) {
        e.preventDefault();
        availableCouponsModal.style.display = "flex";
    }

    Array.from(closeBtns).forEach(btn => {
        btn.onclick = function() {
            modal.style.display = "none";
            availableCouponsModal.style.display = "none";
        }
    });

    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
        if (event.target == availableCouponsModal) {
            availableCouponsModal.style.display = "none";
        }
    }

    // Coupon functionality
    checkCouponBtn.onclick = function() {
        var couponCode = couponCodeInput.value.trim().toUpperCase();
        var coupon = couponsData.find(c => c.couponCode === couponCode);
        
        if (coupon) {
            document.querySelector('.coupon-badge').textContent = coupon.couponCode;
            document.querySelector('#couponDetails h3').textContent = `Save ₹${coupon.discountAmount}`;
            document.querySelector('#couponDetails .description').textContent = coupon.description;
            document.querySelector('#couponDetails .expiry').textContent = `Expires on: ${new Date(coupon.validTo).toLocaleDateString()}`;
            
            couponDetails.style.display = "block";
            applyCouponBtn.disabled = false;
        } else {
            showNotification("Invalid coupon code", true);
            couponDetails.style.display = "none";
            applyCouponBtn.disabled = true;
        }
    }

    applyCouponBtn.onclick = function() {
        var couponCode = couponCodeInput.value.trim().toUpperCase();

        Swal.fire({
            title: 'Applying Coupon',
            text: 'Please wait...',
            allowOutsideClick: false,
            showConfirmButton: false,
            willOpen: () => {
                Swal.showLoading();
            }
        });

        fetch('/applycoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ couponCode: couponCode }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showNotification(`Coupon applied successfully! You saved ₹${data.discountAmount}`, false);
                updateTotalPrice(data.newTotal, data.discountAmount);
                modal.style.display = "none";
                addRemoveCouponButton(couponCode);
            } else {
                showNotification(data.message || "Failed to apply coupon", true);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification("An error occurred while applying the coupon", true);
        })
        .finally(() => {
            Swal.close();
        });
    }

    function addRemoveCouponButton(couponCode) {
        const existingButton = document.getElementById('removeCouponBtn');
        if (existingButton) {
            existingButton.remove();
        }
        const removeCouponButton = document.createElement('button');
        removeCouponButton.textContent = 'Remove Coupon';
        removeCouponButton.id = 'removeCouponBtn';
        removeCouponButton.classList.add('remove-coupon-btn');
        removeCouponButton.type = 'button'; 
        couponSection.appendChild(removeCouponButton);
    }

    function removeCoupon(event) {
        event.preventDefault();
        event.stopPropagation();
        
        Swal.fire({
            title: 'Removing Coupon',
            text: 'Please wait...',
            allowOutsideClick: false,
            showConfirmButton: false,
            willOpen: () => {
                Swal.showLoading();
            }
        });

        fetch('/removecoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                Swal.fire({
                    title: 'Success',
                    text: 'Coupon removed successfully',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    location.reload();
                });
            } else {
                throw new Error(data.message || "Failed to remove coupon");
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error',
                text: error.message || "An error occurred while removing the coupon",
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    }

    // Event delegation for remove coupon button
    document.body.addEventListener('click', function(event) {
        if (event.target && event.target.id === 'removeCouponBtn') {
            removeCoupon(event);
        }
    });

    // Form submission
    checkoutForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const submitButton = checkoutForm.querySelector('button[type="submit"]');
        submitButton.disabled = true;

        const formData = new FormData(this);
        const data = {
            paymentMethod: formData.get('paymentMethod')
        };

        const selectedAddress = formData.get('selectedAddress');
        
        if (selectedAddress === 'new') {
            data.address = {
                name: formData.get('name'),
                phoneNumber: formData.get('phoneNumber'),
                address: formData.get('address'),
                locality: formData.get('locality'),
                city: formData.get('city'),
                state: formData.get('state'),
                pincode: formData.get('pincode'),
                addressType: formData.get('addressType')
            };
        } else {
            data.selectedAddressId = selectedAddress;
        }

        fetch('/placeOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
            if(data.success){
                if(data.razorpayOrderId){
                    var options = {
                        "key": data.key, 
                        "amount": data.amount, 
                        "currency": data.currency,
                        "name": "VISTAVOGUE",
                        "description": "Test Transaction",
                        "image" : 'images/logs.png',
                        "order_id": data.razorpayOrderId,
                        "handler" : function (response){
                            createOrder(data, response,true);
                        },
                        "prefill": {
                            "name": "kaka",
                            "email": "kaka1email@example.com",
                            "contact": "9990000999"
                        },
                        "notes": {
                            address: "Razor pay Corporate Office",
                        },
                        "theme": {
                            "color": "#0D0D0D"
                        }
                    };
                    var razor = new window.Razorpay(options);
                    razor.open();

                    // razorpay failed
                    razor.on('payment.failed', async function (response) {
                        createOrder(data, response,false);
                    })
                } else {
                    Swal.fire({
                        position: 'center',
                        icon: "success",
                        title: "Your order has been successful",
                        showConfirmButton: false,
                        timer: 2000
                    })
                    .then(() => window.location.href = `/order-confirmation/${data.orderId}`);
                }
            } else {
                throw new Error(data.message || 'Error placing order');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error',
                text: error.message || 'An error occurred while placing the order.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        })
        .finally(() => {
            submitButton.disabled = false;
        });
    });

    function createOrder(orderData, PaymentResponse, payment) {
        console.log("response", {orderData, PaymentResponse});
        fetch('/createOrder', {
            method: 'POST',
            headers: {
                'Content-type': 'application/json'
            },
            body: JSON.stringify({
                razorpayOrderId: PaymentResponse.razorpay_order_id,
                razorpayPaymentId: PaymentResponse.razorpay_payment_id,
                razorpaySignature: PaymentResponse.razorpay_signature,
                payment,
                ...orderData
            })
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    position: 'center',
                    icon: "success",
                    title: "Your order has been successful",
                    showConfirmButton: false,
                    timer: 2000
                })
                .then(() => window.location.href = `/order-confirmation/${data.orderId}`);
            } else {
                showNotification(`Error creating order: ${data.message}`, true);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('An error occurred while creating the order.', true);
        });
    }

    function updateTotalPrice(newTotal, discountAmount) {
        const totalSpan = document.querySelector('.checkout__total__all li:last-child span');
        totalSpan.textContent = `₹${newTotal.toFixed(2)}`;

        const discountLi = document.createElement('li');
        discountLi.classList.add('discount-line');
        discountLi.textContent = `Coupon Discount`;
        const discountSpan = document.createElement('span');
        discountSpan.textContent = `-₹${discountAmount.toFixed(2)}`;
        discountLi.appendChild(discountSpan);

        const totalAllUl = document.querySelector('.checkout__total__all');
        totalAllUl.insertBefore(discountLi, totalAllUl.lastElementChild);
    }

    function showNotification(message, isError = false) {
        Toastify({
            text: message,
            duration: 3000,
            close: true,
            gravity: "top",
            position: "center",
            backgroundColor: isError ? "red" : "#179500",
        }).showToast();
    }

    // Address form toggle
    function toggleAddressForm() {
        const select = document.getElementById('addressSelect');
        const form = document.getElementById('addressForm');
        form.style.display = select.value === 'new' ? 'block' : 'none';
    }

    // Clipboard functionality for coupon codes
    document.querySelectorAll('.coupon-badge').forEach(badge => {
        badge.addEventListener('click', function() {
            const couponCode = this.dataset.coupon;
            navigator.clipboard.writeText(couponCode).then(() => {
                showNotification('Coupon code copied!', false);
            }).catch(err => {
                console.error('Failed to copy: ', err);
                showNotification('Failed to copy coupon code', true);
            });
        });
    });

    // Keyboard accessibility for modals
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            modal.style.display = 'none';
            availableCouponsModal.style.display = 'none';
        }
    });

    const modalElement = document.querySelector('.modal-content');
    modalElement.addEventListener('keydown', function(e) {
        if (e.key === 'Tab') {
            const focusableContent = modalElement.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
            const firstFocusableElement = focusableContent[0];
            const lastFocusableElement = focusableContent[focusableContent.length - 1];

            if (e.shiftKey) {
                if (document.activeElement === firstFocusableElement) {
                    lastFocusableElement.focus();
                    e.preventDefault();
                }
            } else {
                if (document.activeElement === lastFocusableElement) {
                    firstFocusableElement.focus();
                    e.preventDefault();
                }
            }
        }
    });
});

</script>

<style>
    .modal {
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.4);
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .modal-content {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        width: 90%;
        max-width: 400px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    .modal-header h2 {
        margin: 0;
        font-size: 18px;
        font-weight: bold;
    }
    .close {
        color: #aaa;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }
    .close:hover {
        color: #000;
    }
    .coupon-input {
        display: flex;
        margin-bottom: 20px;
    }
    .coupon-input input {
        flex-grow: 1;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px 0 0 4px;
        font-size: 14px;
    }
    .coupon-input button {
        padding: 10px 15px;
        background-color: #179500;
        color: white;
        border: none;
        border-radius: 0 4px 4px 0;
        cursor: pointer;
        font-size: 14px;
    }
    .coupon-badge {
        display: inline-block;
        padding: 5px 10px;
        background-color: #bcffa7;
        color: #0a0a0a;
        border: 1px dashed #a0cc00;
        border-radius: 4px;
        margin-bottom: 10px;
        font-size: 14px;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
    }
    .coupon-badge:hover {
        background-color: #179500;
        color: white;
    }

    .copy-icon {
        margin-left: 5px;
        font-size: 12px;
    }
    #couponDetails h3 {
        margin: 10px 0;
        font-size: 16px;
        color: #179500;
    }
    #couponDetails p {
        margin: 5px 0;
        font-size: 14px;
        color: #333;
    }
    #couponDetails .expiry {
        font-size: 12px;
        color: #888;
    }
    #applyCoupon {
        width: 100%;
        padding: 10px;
        background-color: #179500;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        margin-top: 20px;
    }
    #applyCoupon:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }
    #availableCouponsList {
        max-height: 300px;
        overflow-y: auto;
    }

    .coupon-item {
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 10px;
        margin-bottom: 10px;
    }

    .coupon-item .coupon-badge {
        cursor: pointer;
    }

    .coupon-item .coupon-badge:hover {
        background-color: #179500;
        color: white;
    }

    .remove-coupon-btn {
        margin-left: 10px;
        padding: 5px 10px;
        background-color: #179500;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
    }
    @media (max-width: 768px) {
        .modal-content {
            width: 95%;
        }
    }
    
</style>

