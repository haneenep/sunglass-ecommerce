<%- include('../layout/userProfileHead') -%>

<!-- Header Section Begin -->
<%- include('../layout/userHeaderNav') -%>
<!-- Header Section End -->

<div class="page-container">
    <!-- Sidebar Begin -->

    <%- include('../layout/userProfileSidebar') -%>
    <!-- Sidebar End -->

    <!-- Main Content Begin -->
    <div class="main-content">
        <div class="info-header">
            <h3>PROFILE</h3>
            <hr>
        </div>
        <% if(locals.user){ %>
        <div class="info-item">
            <label>Name:</label>
            <p id="userName"><%= user.name %></p>
            <button class="edit-btn" id="editName">Edit</button>
        </div>
        <div class="info-item">
            <label>Email:</label>
            <p><%= user.email %></p>
        </div>
        <div class="info-item">
            <label>Referral Link:</label>
            <% if(user.referalLink){ %>
            <div class="referal-badge" data-referal="<%= user.referalLink %>">
                Copy Referral Link
                <span class="copy-icon">ðŸ“‹</span>
            </div>
            <% }else{ %>
                <p>Coming soon!</p>
            <% } %>
        </div>
        <div class="info-item">
            <label>Password:</label>
            <p id="password">********</p>
            <button class="edit-btn" id="editPassword">Change Password</button>
        </div>
    </div>
    <!-- Main Content End -->
</div>

<!-- Name Edit Modal -->
<div id="editNameModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Edit Name</h2>
            <span class="close">&times;</span>
        </div>
        <form class="modal-form" id="nameForm">
            <input type="text" id="nameInput" placeholder="Enter your name" value="<%= user.name %>">
            <div class="modal-buttons">
                <button type="submit" class="btn-apply">Apply Changes</button>
                <button type="button" class="btn-cancel">Cancel</button>
            </div>
        </form>
    </div>
</div>
<% } %>

<!-- Password Edit Modal -->
<div id="editPasswordModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Edit Password</h2>
            <span class="close">&times;</span>
        </div>
        <form class="modal-form" id="passwordForm">
            <input type="password" id="currentPassword" placeholder="Current Password" required>
            <input type="password" id="newPassword" placeholder="New Password" required>
            <input type="password" id="confirmPassword" placeholder="Confirm New Password" required>
            <div id="passwordRequirements">
                <p>Password must have:</p>
                <ul>
                    <li><span id="lengthCheck">âœ—</span> At least 8 characters</li>
                    <li><span id="upperCheck">âœ—</span> At least one uppercase letter</li>
                    <li><span id="numberCheck">âœ—</span> At least one number</li>
                    <li><span id="specialCheck">âœ—</span> At least one special character</li>
                </ul>
            </div>
            <div class="modal-buttons">
                <button type="submit" class="btn-apply">Apply Changes</button>
                <button type="button" class="btn-cancel">Cancel</button>
            </div>
        </form>
    </div>
</div>
<!-- Modal End -->

<script>
const nameModal = document.getElementById('editNameModal');
const passwordModal = document.getElementById('editPasswordModal');
const editNameBtn = document.getElementById('editName');
const editPasswordBtn = document.getElementById('editPassword');
const closeBtns = document.getElementsByClassName('close');
const cancelBtns = document.querySelectorAll('.btn-cancel');
const userName = document.getElementById('userName');
const nameInput = document.getElementById('nameInput');
const nameForm = document.getElementById('nameForm');
const passwordForm = document.getElementById('passwordForm');
const newPasswordInput = document.getElementById('newPassword');
const confirmPasswordInput = document.getElementById('confirmPassword');
const currentPasswordInput = document.getElementById('currentPassword');


const lengthCheck = document.getElementById('lengthCheck');
const upperCheck = document.getElementById('upperCheck');
const numberCheck = document.getElementById('numberCheck');
const specialCheck = document.getElementById('specialCheck');


function isPasswordValid(password) {
    return password.length >= 8 &&
           /[A-Z]/.test(password) &&
           /[0-9]/.test(password) &&
           /[!@#$%^&*]/.test(password);
}

function updatePasswordStrength(password) {
    lengthCheck.textContent = password.length >= 8 ? 'âœ“' : 'âœ—';
    upperCheck.textContent = /[A-Z]/.test(password) ? 'âœ“' : 'âœ—';
    numberCheck.textContent = /[0-9]/.test(password) ? 'âœ“' : 'âœ—';
    specialCheck.textContent = /[!@#$%^&*]/.test(password) ? 'âœ“' : 'âœ—';
}

function validatePasswords() {
    const newPassword = newPasswordInput.value;
    const confirmPassword = confirmPasswordInput.value;

    if (newPassword !== confirmPassword) {
        showNotification('New password and confirm password do not match.', true);
        return false;
    }

    if (!isPasswordValid(newPassword)) {
        showNotification('Password does not meet all requirements.', true);
        return false;
    }

    return true;
}

editNameBtn.onclick = function() {
    nameModal.style.display = "block";
    nameInput.value = userName.textContent;
}

editPasswordBtn.onclick = function() {
    passwordModal.style.display = "block";
}

Array.from(closeBtns).forEach(btn => {
    btn.onclick = function() {
        nameModal.style.display = "none";
        passwordModal.style.display = "none";
    }
});

cancelBtns.forEach(btn => {
    btn.onclick = function() {
        nameModal.style.display = 'none';
        passwordModal.style.display = 'none';
    }
});

nameForm.onsubmit = async function(e) {
    e.preventDefault();
    const newName = nameInput.value;
    
    if (/\s/.test(newName) || /\d/.test(newName)) {
        showNotification('Name cannot contain spaces or numbers.', true);
        return;
    }
    
    try {
        const response = await fetch('/updateName', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ name: newName }),
        });

        if (response.ok) {
            userName.textContent = newName;
            nameModal.style.display = "none";
            showNotification('Name Updated Successfully', false);
        } else {
            showNotification('Failed to update name. Please try again.', true);
        }
    } catch(error) {
        console.error('Error:', error);
        showNotification('An error occurred. Please try again.', true);
    }
}

passwordForm.onsubmit = async function(e) {
    e.preventDefault();
    if (validatePasswords()) {
        const currentPassword = currentPasswordInput.value;
        const newPassword = newPasswordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        try {
            const response = await fetch('/updatePassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ currentPassword, newPassword, confirmPassword })
            });

            if (response.ok) {
                showNotification('Password updated successfully.', false);
                passwordModal.style.display = 'none';
                passwordForm.reset();
            } else {
                showNotification('Failed to update password. Please try again.', true);
            }
        } catch (error) {
            console.error('Error:', error);
            showNotification('An error occurred. Please try again.', true);
        }
    }
}

newPasswordInput.addEventListener('input', function() {
    updatePasswordStrength(this.value);
});

confirmPasswordInput.addEventListener('input', function() {
    if (this.value !== newPasswordInput.value) {
        showNotification('Passwords do not match.', true);
    } else {
        showNotification('Passwords match.', false);
    }
});

window.onclick = function(event) {
    if (event.target == nameModal || event.target == passwordModal) {
        nameModal.style.display = "none";
        passwordModal.style.display = "none";
    }
}

document.querySelectorAll('.referal-badge').forEach(badge => {
    badge.addEventListener('click', function() {
        const referralLink = this.getAttribute('data-referal');
        navigator.clipboard.writeText(referralLink).then(() => {
            showNotification('Referral link copied to clipboard!',false);
        }).catch(err => {
            console.error('Failed to copy: ', err);
        });
    });
});

const showNotification = (message, isError = false) => {
    Toastify({
        text: message,
        duration: 3000,
        close: true,
        gravity: "top",
        position: "center",
        backgroundColor: isError ? "red" : "green",
    }).showToast();
};

function confirmLogout(event) {
    event.preventDefault();
    const userConfirmed = confirm('Are you sure you want to logout?');
    if (userConfirmed) {
        window.location.href = event.target.href;
    }
}
</script>

<!-- Footer Section Begin -->
<%- include('../layout/userFooterNav') -%>
<!-- Footer Section End -->

<%- include('../layout/userFoot') -%>

<style>

.close {
    color: #aaa;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
    transition: color 0.3s;
}

.close:hover {
    color: black;
}

.referal-badge {
    display: inline-block;
    padding: 5px 10px;
    background-color: #bcffa7;
    color: #179500;
    border: 1px dashed #71ff82;
    border-radius: 4px;
    margin-bottom: 10px;
    font-size: 14px;
    cursor: pointer;
    transition: background-color 0.3s, color 0.3s;
}

.copy-icon {
    margin-left: 5px;
    font-size: 12px;
}

.referal-badge:hover {
    background-color: #179500;
    color: white;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

#passwordRequirements {
    font-size: 14px;
    margin-top: 10px;
}

#passwordRequirements ul {
    list-style-type: none;
    padding: 0;
}

#passwordRequirements ul li {
    margin-bottom: 5px;
}

#passwordRequirements ul li span {
    margin-right: 10px;
    color: red;
}

#passwordRequirements ul li span.green {
    color: green;
}
</style>
