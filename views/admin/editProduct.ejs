<!doctype html>
<html lang="en">
<head>
    <%- include('../layout/adminHead') -%>
    <title>Edit Product</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
    <style>

        #imageContainer {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 20px;
        }
        .image-item {
            position: relative;
            width: 150px;
            height: 150px;
        }
        .image-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .image-actions {
            position: absolute;
            top: 5px;
            right: 5px;
            display: flex;
            gap: 5px;
        }
        .btn-image-action {
            padding: 2px 5px;
            font-size: 12px;
        }
        #cropperModal .modal-body {
            max-height: 400px;
            overflow: auto;
        }
        .error-message {
            color: red;
            font-size: 0.875em;
        }
    </style>
</head>
<body>
    <div class="wrapper">
        <%- include('../layout/adminSideWrapper') -%>
        <%- include('../layout/adminHeaderNav') -%>
        <div class="page-wrapper">
            <div class="page-content">
                <div class="row">
                    <div class="col-xl-9 mx-auto">
                        <h6 class="mb-0 text-uppercase">Edit Product</h6>
                        <hr />
                        <div class="card border-top border-0 border-4 border-danger">
                            <div class="card-body p-5">
                                <form class="row g-3" id="productForm" action="/admin/edit-product/<%= product._id %>" method="POST" enctype="multipart/form-data">
                                    <input type="hidden" name="_method" value="PUT">
                                    <div class="col-md-6">
                                        <label for="inputProductName" class="form-label">Product Name</label>
                                        <input type="text" class="form-control" id="inputProductName" name="productName" value="<%= product.productName %>" required>
                                        <span class="error-message" id="name-error"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="inputPrice" class="form-label">Price</label>
                                        <input type="number" step="0.01" class="form-control" id="inputPrice" name="price" value="<%= product.price %>" required>
                                        <span class="error-message" id="price-error"></span>
                                    </div>
                                    <div class="col-md-12">
                                        <label for="inputDescription" class="form-label">Product Description</label>
                                        <textarea class="form-control" id="inputDescription" name="description" rows="4" required><%= product.description %></textarea>
                                        <span class="error-message" id="description-error"></span>
                                    </div>
                                    <div class="col-12">
                                        <label class="form-label">Product Images</label>
                                        <div id="imageContainer">
                                            <% product.images.forEach((image, index) => { %>
                                                <div class="image-item" id="image-<%= index %>">
                                                    <img src="<%= image %>" alt="Product Image <%= index + 1 %>">
                                                    <div class="image-actions">
                                                        <button type="button" class="btn btn-danger btn-image-action" onclick="deleteImage(<%= index %>)">Delete</button>
                                                        <button type="button" class="btn btn-primary btn-image-action" onclick="editImage('<%= image %>', <%= index %>)">Edit</button>
                                                    </div>
                                                </div>
                                            <% }); %>
                                        </div>
                                        <input type="file" class="form-control" id="newImages" name="newImages" accept="image/*" multiple onchange="handleNewImages(this)">
                                        <span class="error-message" id="images-error"></span>
                                    </div>
                                    <div class="col-12">
                                        <label for="inputCategory" class="form-label">Category</label>
                                        <select class="form-select" id="inputCategory" name="category" required>
                                            <% category.forEach(function(cat) { %>
                                                <option value="<%= cat._id %>" <%= product.category._id.equals(cat._id) ? 'selected' : '' %>><%= cat.name %></option>
                                            <% }); %>
                                        </select>
                                        <span class="error-message" id="category-error"></span>
                                    </div>
                                    <div class="col-12">    
                                        <label for="inputBrand" class="form-label">Brand</label>
                                        <select class="form-select" id="inputBrand" name="brand" required>
                                            <% brand.forEach(function(b) { %>
                                                <option value="<%= b._id %>" <%= product.brand._id.equals(b._id) ? 'selected' : '' %>><%= b.name %></option>
                                            <% }); %>
                                        </select>
                                        <span class="error-message" id="brand-error"></span>
                                    </div>
                                    <div class="col-12">
                                        <label for="inputDiscountAmount" class="form-label">Discount Amount</label>
                                        <input type="number" class="form-control" id="inputDiscountAmount" name="discountAmount" value="<%= product.discountAmount %>"/>
                                        <span class="error-message" id="discount-error"></span>
                                      </div>
                                    <div class="col-12">
                                        <label for="inputStockQuantity" class="form-label">Stock Quantity</label>
                                        <input type="number" class="    form-control" id="inputStockQuantity" name="stockQuantity" value="<%= product.stockQuantity %>" required>
                                        <span class="error-message" id="quantity-error"></span>
                                    </div>
                                    <div class="col-12">
                                        <button id="submit-btn" type="submit" class="btn btn-success px-5">Save Changes</button>
                                    </div>
                                    <input type="hidden" name="deletedImages" id="deletedImagesInput">
                                    <input type="hidden" name="editedImages" id="editedImagesInput">
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="overlay toggle-icon"></div>
        <footer class="page-footer">
            <p class="mb-0">Copyright Â© 2023. All rights reserved.</p>
        </footer>
    </div>

    <!-- Cropper Modal -->
    <div class="modal fade" id="cropperModal" tabindex="-1" aria-labelledby="cropperModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cropperModalLabel">Crop Image</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <img id="imageToCrop" src="" alt="Image to crop" style="max-width: 100%;">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="cropImage">Crop</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.10.2/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="/assets/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/jquery.min.js"></script>
    <script src="/assets/plugins/simplebar/js/simplebar.min.js"></script>
    <script src="/assets/plugins/metismenu/js/metisMenu.min.js"></script>
    <script src="/assets/plugins/perfect-scrollbar/js/perfect-scrollbar.js"></script>
    <script src="/assets/js/app.js"></script>
    <script>
        let deletedImages = [];
        let editedImages = [];
        let cropper;
    
        document.addEventListener('DOMContentLoaded', function() {
            const productForm = document.getElementById('productForm');
    
            productForm.addEventListener('submit', function(event) {
                event.preventDefault();
                if (validateForm()) {
                    updateDeletedImagesInput();
                    updateEditedImagesInput();
                    this.submit();
                }
            });
        });
    
        function validateForm() {
            const form = document.getElementById('productForm');
            const name = form.elements['productName'].value.trim();
            const description = form.elements['description'].value.trim();
            const price = form.elements['price'].value.trim();
            const quantity = form.elements['stockQuantity'].value.trim();
            const category = form.elements['category'].value;
            const brand = form.elements['brand'].value;
            const discountAmount = form.elements['discountAmount'].value.trim();
    
            const errorMessages = document.querySelectorAll('.error-message');
            errorMessages.forEach(error => error.textContent = '');
    
            let isValid = true;
    
            if (name === '') {
                displayErrorMessage('Product Name is required', 'name-error');
                isValid = false;
            }
    
            if (description === '') {
                displayErrorMessage('Product Description is required', 'description-error');
                isValid = false;
            }
    
            if (price === '' || isNaN(price) || parseFloat(price) < 0) {
                displayErrorMessage('Please enter a valid positive price', 'price-error');
                isValid = false;
            }
    
            if (quantity === '' || isNaN(quantity) || parseInt(quantity) < 0) {
                displayErrorMessage('Please enter a valid positive quantity', 'quantity-error');
                isValid = false;
            }
    
            if (category === '') {
                displayErrorMessage('Product Category is required', 'category-error');
                isValid = false;
            }

            // Optional fields validation
            if (discountAmount !== '' && (isNaN(discountAmount) || parseFloat(discountAmount) < 0)) {
                displayErrorMessage('Please enter a valid positive discount amount', 'discount-error');
                isValid = false;
            }
    
            return isValid;
        }
    
        function displayErrorMessage(message, elementId) {
            const errorSpan = document.getElementById(elementId);
            errorSpan.textContent = message;
            errorSpan.style.color = 'red';
        }
    
        function deleteImage(index) {
            const imageElement = document.getElementById(`image-${index}`);
            if (imageElement) {
                imageElement.remove();
                deletedImages.push(index);
            }
        }
    
        function editImage(imageSrc, index) {
            const modal = new bootstrap.Modal(document.getElementById('cropperModal'));
            const image = document.getElementById('imageToCrop');
            image.src = imageSrc;
            modal.show();
    
            if (cropper) {
                cropper.destroy();
            }
    
            cropper = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 1,
            });
    
            document.getElementById('cropImage').onclick = function() {
                const croppedCanvas = cropper.getCroppedCanvas();
                croppedCanvas.toBlob(function(blob) {
                    const formData = new FormData();
                    formData.append('croppedImage', blob, 'cropped.jpg');
                    formData.append('index', index);
    
                    fetch('/admin/crop-image', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const img = document.querySelector(`#image-${index} img`);
                            img.src = data.croppedImagePath;
                            editedImages.push({ index: index, path: data.croppedImagePath });
                            modal.hide();
                        }
                    })
                    .catch(error => console.error('Error:', error));
                });
            };
        }
    
        function handleNewImages(input) {
            const files = Array.from(input.files);
            files.forEach(file => {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const index = document.querySelectorAll('.image-item').length;
                    const imageHtml = `
                        <div class="image-item" id="image-${index}">
                            <img src="${e.target.result}" alt="New Product Image">
                            <div class="image-actions">
                                <button type="button" class="btn btn-danger btn-image-action" onclick="deleteImage(${index})">Delete</button>
                                <button type="button" class="btn btn-primary btn-image-action" onclick="editImage('${e.target.result}', ${index})">Edit</button>
                            </div>
                        </div>
                    `;
                    document.getElementById('imageContainer').insertAdjacentHTML('beforeend', imageHtml);
                }
                reader.readAsDataURL(file);
            });
        }
    
        function updateDeletedImagesInput() {
            document.getElementById('deletedImagesInput').value = JSON.stringify(deletedImages);
        }
    
        function updateEditedImagesInput() {
            document.getElementById('editedImagesInput').value = JSON.stringify(editedImages);
        }
    </script>
    
</body>
</html>